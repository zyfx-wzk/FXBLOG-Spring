2022-04-27 14:03:05.134  INFO 11708 --- [main] com.example.fxblog.FxBlogApplication     : Starting FxBlogApplication using Java 1.8.0_301 on Computer-WZK with PID 11708 (D:\Work\JAVA\FxBlog\target\classes started by WZK in D:\Work\JAVA\FxBlog)
2022-04-27 14:03:05.142  INFO 11708 --- [main] com.example.fxblog.FxBlogApplication     : No active profile set, falling back to default profiles: default
2022-04-27 14:03:06.586  INFO 11708 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2022-04-27 14:03:06.589  INFO 11708 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:03:06.656  INFO 11708 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2022-04-27 14:03:07.597  INFO 11708 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-04-27 14:03:07.789  INFO 11708 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-04-27 14:03:07.789  INFO 11708 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2022-04-27 14:03:07.962  INFO 11708 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-04-27 14:03:07.963  INFO 11708 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2715 ms
2022-04-27 14:03:10.787  INFO 11708 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-04-27 14:03:11.126  INFO 11708 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-04-27 14:03:11.136 DEBUG 11708 --- [main] c.e.fxblog.mapper.MetaMapper.selectList  : ==>  Preparing: SELECT meta_uuid,meta_key,meta_value FROM fx_meta WHERE (meta_key = ?)
2022-04-27 14:03:11.169 DEBUG 11708 --- [main] c.e.fxblog.mapper.MetaMapper.selectList  : ==> Parameters: image_url(String)
2022-04-27 14:03:11.262 DEBUG 11708 --- [main] c.e.fxblog.mapper.MetaMapper.selectList  : <==      Total: 6
2022-04-27 14:03:11.290  INFO 11708 --- [main] com.example.fxblog.utils.ImageUtil       : 图片列表加载完成,当前Redis缓存中共6张图片
2022-04-27 14:03:12.759  INFO 11708 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-04-27 14:03:12.789  INFO 11708 --- [main] com.example.fxblog.FxBlogApplication     : Started FxBlogApplication in 8.821 seconds (JVM running for 13.853)
2022-04-27 14:03:39.160  INFO 11708 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-27 14:03:39.160  INFO 11708 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-04-27 14:03:39.163  INFO 11708 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2022-04-27 14:03:39.445 DEBUG 11708 --- [http-nio-8080-exec-4] c.e.fxblog.mapper.MetaMapper.selectList  : ==>  Preparing: SELECT meta_uuid,meta_key,meta_value FROM fx_meta WHERE (meta_key = ?)
2022-04-27 14:03:39.445 DEBUG 11708 --- [http-nio-8080-exec-5] c.e.fxblog.mapper.MetaMapper.selectList  : ==>  Preparing: SELECT meta_uuid,meta_key,meta_value FROM fx_meta WHERE (meta_key = ?)
2022-04-27 14:03:39.445 DEBUG 11708 --- [http-nio-8080-exec-3] c.e.fxblog.mapper.MetaMapper.selectList  : ==>  Preparing: SELECT meta_uuid,meta_key,meta_value FROM fx_meta WHERE (meta_key = ?)
2022-04-27 14:03:39.446 DEBUG 11708 --- [http-nio-8080-exec-4] c.e.fxblog.mapper.MetaMapper.selectList  : ==> Parameters: my_info(String)
2022-04-27 14:03:39.446 DEBUG 11708 --- [http-nio-8080-exec-5] c.e.fxblog.mapper.MetaMapper.selectList  : ==> Parameters: my_website(String)
2022-04-27 14:03:39.446 DEBUG 11708 --- [http-nio-8080-exec-3] c.e.fxblog.mapper.MetaMapper.selectList  : ==> Parameters: setting(String)
2022-04-27 14:03:39.448 DEBUG 11708 --- [http-nio-8080-exec-3] c.e.fxblog.mapper.MetaMapper.selectList  : <==      Total: 1
2022-04-27 14:03:39.448 DEBUG 11708 --- [http-nio-8080-exec-4] c.e.fxblog.mapper.MetaMapper.selectList  : <==      Total: 1
2022-04-27 14:03:39.449 DEBUG 11708 --- [http-nio-8080-exec-5] c.e.fxblog.mapper.MetaMapper.selectList  : <==      Total: 3
2022-04-27 14:03:50.487 DEBUG 11708 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.selectById  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog WHERE blog_uuid=?
2022-04-27 14:03:50.488 DEBUG 11708 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.selectById  : ==> Parameters: 1002(Integer)
2022-04-27 14:03:50.504 DEBUG 11708 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.selectById  : <==      Total: 1
2022-04-27 14:03:50.506 DEBUG 11708 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.updateById  : ==>  Preparing: UPDATE fx_blog SET blog_text=?, blog_type=?, blog_title=?, blog_time=?, blog_count=? WHERE blog_uuid=?
2022-04-27 14:03:50.511 DEBUG 11708 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.updateById  : ==> Parameters: ![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

(String), 尚未分组(String), 2022-04-26(String), 2022-04-26 14:17:39.0(Timestamp), 10(Integer), 1002(Integer)
2022-04-27 14:03:50.559 DEBUG 11708 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.updateById  : <==    Updates: 1
2022-04-27 14:03:54.699 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.MetaMapper.selectList  : ==>  Preparing: SELECT meta_uuid,meta_key,meta_value FROM fx_meta WHERE (meta_key = ?)
2022-04-27 14:03:54.699 DEBUG 11708 --- [http-nio-8080-exec-9] c.e.fxblog.mapper.MetaMapper.selectList  : ==>  Preparing: SELECT meta_uuid,meta_key,meta_value FROM fx_meta WHERE (meta_key = ?)
2022-04-27 14:03:54.700 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.MetaMapper.selectList  : ==> Parameters: my_info(String)
2022-04-27 14:03:54.700 DEBUG 11708 --- [http-nio-8080-exec-9] c.e.fxblog.mapper.MetaMapper.selectList  : ==> Parameters: my_website(String)
2022-04-27 14:03:54.703 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.MetaMapper.selectList  : <==      Total: 1
2022-04-27 14:03:54.704 DEBUG 11708 --- [http-nio-8080-exec-9] c.e.fxblog.mapper.MetaMapper.selectList  : <==      Total: 3
2022-04-27 14:05:00.531  INFO 11708 --- [http-nio-8080-exec-3] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:05:00.550  INFO 11708 --- [http-nio-8080-exec-3] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2022-04-27 14:05:00.732 DEBUG 11708 --- [http-nio-8080-exec-9] c.e.fxblog.mapper.MetaMapper.selectList  : ==>  Preparing: SELECT meta_uuid,meta_key,meta_value FROM fx_meta WHERE (meta_key = ?)
2022-04-27 14:05:00.732 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.MetaMapper.selectList  : ==>  Preparing: SELECT meta_uuid,meta_key,meta_value FROM fx_meta WHERE (meta_key = ?)
2022-04-27 14:05:00.732 DEBUG 11708 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.MetaMapper.selectList  : ==>  Preparing: SELECT meta_uuid,meta_key,meta_value FROM fx_meta WHERE (meta_key = ?)
2022-04-27 14:05:00.734 DEBUG 11708 --- [http-nio-8080-exec-9] c.e.fxblog.mapper.MetaMapper.selectList  : ==> Parameters: my_website(String)
2022-04-27 14:05:00.735 DEBUG 11708 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.MetaMapper.selectList  : ==> Parameters: setting(String)
2022-04-27 14:05:00.735 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.MetaMapper.selectList  : ==> Parameters: my_info(String)
2022-04-27 14:05:00.738 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.MetaMapper.selectList  : <==      Total: 1
2022-04-27 14:05:00.738 DEBUG 11708 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.MetaMapper.selectList  : <==      Total: 1
2022-04-27 14:05:00.738 DEBUG 11708 --- [http-nio-8080-exec-9] c.e.fxblog.mapper.MetaMapper.selectList  : <==      Total: 3
2022-04-27 14:05:48.547  INFO 11708 --- [http-nio-8080-exec-1] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:05:48.557  INFO 11708 --- [http-nio-8080-exec-1] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2022-04-27 14:05:48.698 DEBUG 11708 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.selectById  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog WHERE blog_uuid=?
2022-04-27 14:05:48.699 DEBUG 11708 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.selectById  : ==> Parameters: 1002(Integer)
2022-04-27 14:05:48.700 DEBUG 11708 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.selectById  : <==      Total: 1
2022-04-27 14:05:48.703 DEBUG 11708 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.updateById  : ==>  Preparing: UPDATE fx_blog SET blog_text=?, blog_type=?, blog_title=?, blog_time=?, blog_count=? WHERE blog_uuid=?
2022-04-27 14:05:48.705 DEBUG 11708 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.updateById  : ==> Parameters: ![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

(String), 尚未分组(String), 2022-04-26(String), 2022-04-26 14:17:39.0(Timestamp), 11(Integer), 1002(Integer)
2022-04-27 14:05:48.754 DEBUG 11708 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.updateById  : <==    Updates: 1
2022-04-27 14:31:14.260  INFO 11708 --- [http-nio-8080-exec-10] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:31:14.271  INFO 11708 --- [http-nio-8080-exec-10] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2022-04-27 14:31:14.508 DEBUG 11708 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.BlogMapper.insert      : ==>  Preparing: INSERT INTO fx_blog ( blog_text, blog_title, blog_time ) VALUES ( ?, ?, ? )
2022-04-27 14:31:14.510 DEBUG 11708 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.BlogMapper.insert      : ==> Parameters: ![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

(String), 研压到此(String), 2022-04-27 14:31:14.505(Timestamp)
2022-04-27 14:31:14.525 DEBUG 11708 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.BlogMapper.insert      : <==    Updates: 1
2022-04-27 14:31:16.054 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.BlogMapper.insert      : ==>  Preparing: INSERT INTO fx_blog ( blog_text, blog_title, blog_time ) VALUES ( ?, ?, ? )
2022-04-27 14:31:16.055 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.BlogMapper.insert      : ==> Parameters: ![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

(String), 研压到此(String), 2022-04-27 14:31:16.053(Timestamp)
2022-04-27 14:31:16.114 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.BlogMapper.insert      : <==    Updates: 1
2022-04-27 14:31:17.046 DEBUG 11708 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.insert      : ==>  Preparing: INSERT INTO fx_blog ( blog_text, blog_title, blog_time ) VALUES ( ?, ?, ? )
2022-04-27 14:31:17.047 DEBUG 11708 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.insert      : ==> Parameters: ![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

(String), 研压到此(String), 2022-04-27 14:31:17.045(Timestamp)
2022-04-27 14:31:17.091 DEBUG 11708 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.insert      : <==    Updates: 1
2022-04-27 14:31:17.803 DEBUG 11708 --- [http-nio-8080-exec-5] c.e.fxblog.mapper.BlogMapper.insert      : ==>  Preparing: INSERT INTO fx_blog ( blog_text, blog_title, blog_time ) VALUES ( ?, ?, ? )
2022-04-27 14:31:17.804 DEBUG 11708 --- [http-nio-8080-exec-5] c.e.fxblog.mapper.BlogMapper.insert      : ==> Parameters: ![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

(String), 研压到此(String), 2022-04-27 14:31:17.801(Timestamp)
2022-04-27 14:31:17.847 DEBUG 11708 --- [http-nio-8080-exec-5] c.e.fxblog.mapper.BlogMapper.insert      : <==    Updates: 1
2022-04-27 14:31:18.496 DEBUG 11708 --- [http-nio-8080-exec-6] c.e.fxblog.mapper.BlogMapper.insert      : ==>  Preparing: INSERT INTO fx_blog ( blog_text, blog_title, blog_time ) VALUES ( ?, ?, ? )
2022-04-27 14:31:18.496 DEBUG 11708 --- [http-nio-8080-exec-6] c.e.fxblog.mapper.BlogMapper.insert      : ==> Parameters: ![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

(String), 研压到此(String), 2022-04-27 14:31:18.494(Timestamp)
2022-04-27 14:31:18.537 DEBUG 11708 --- [http-nio-8080-exec-6] c.e.fxblog.mapper.BlogMapper.insert      : <==    Updates: 1
2022-04-27 14:31:19.108 DEBUG 11708 --- [http-nio-8080-exec-4] c.e.fxblog.mapper.BlogMapper.insert      : ==>  Preparing: INSERT INTO fx_blog ( blog_text, blog_title, blog_time ) VALUES ( ?, ?, ? )
2022-04-27 14:31:19.109 DEBUG 11708 --- [http-nio-8080-exec-4] c.e.fxblog.mapper.BlogMapper.insert      : ==> Parameters: ![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

(String), 研压到此(String), 2022-04-27 14:31:19.107(Timestamp)
2022-04-27 14:31:19.119 DEBUG 11708 --- [http-nio-8080-exec-4] c.e.fxblog.mapper.BlogMapper.insert      : <==    Updates: 1
2022-04-27 14:31:19.744 DEBUG 11708 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.insert      : ==>  Preparing: INSERT INTO fx_blog ( blog_text, blog_title, blog_time ) VALUES ( ?, ?, ? )
2022-04-27 14:31:19.744 DEBUG 11708 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.insert      : ==> Parameters: ![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

(String), 研压到此(String), 2022-04-27 14:31:19.742(Timestamp)
2022-04-27 14:31:19.787 DEBUG 11708 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.insert      : <==    Updates: 1
2022-04-27 14:31:20.341 DEBUG 11708 --- [http-nio-8080-exec-3] c.e.fxblog.mapper.BlogMapper.insert      : ==>  Preparing: INSERT INTO fx_blog ( blog_text, blog_title, blog_time ) VALUES ( ?, ?, ? )
2022-04-27 14:31:20.342 DEBUG 11708 --- [http-nio-8080-exec-3] c.e.fxblog.mapper.BlogMapper.insert      : ==> Parameters: ![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

(String), 研压到此(String), 2022-04-27 14:31:20.339(Timestamp)
2022-04-27 14:31:20.383 DEBUG 11708 --- [http-nio-8080-exec-3] c.e.fxblog.mapper.BlogMapper.insert      : <==    Updates: 1
2022-04-27 14:31:36.146 DEBUG 11708 --- [http-nio-8080-exec-2] c.e.fxblog.mapper.BlogMapper.selectById  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog WHERE blog_uuid=?
2022-04-27 14:31:36.147 DEBUG 11708 --- [http-nio-8080-exec-2] c.e.fxblog.mapper.BlogMapper.selectById  : ==> Parameters: 1002(Integer)
2022-04-27 14:31:36.148 DEBUG 11708 --- [http-nio-8080-exec-2] c.e.fxblog.mapper.BlogMapper.selectById  : <==      Total: 1
2022-04-27 14:31:36.152 DEBUG 11708 --- [http-nio-8080-exec-2] c.e.fxblog.mapper.BlogMapper.updateById  : ==>  Preparing: UPDATE fx_blog SET blog_text=?, blog_type=?, blog_title=?, blog_time=?, blog_count=? WHERE blog_uuid=?
2022-04-27 14:31:36.153 DEBUG 11708 --- [http-nio-8080-exec-2] c.e.fxblog.mapper.BlogMapper.updateById  : ==> Parameters: ![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

(String), 尚未分组(String), 2022-04-26(String), 2022-04-26 14:17:39.0(Timestamp), 12(Integer), 1002(Integer)
2022-04-27 14:31:36.197 DEBUG 11708 --- [http-nio-8080-exec-2] c.e.fxblog.mapper.BlogMapper.updateById  : <==    Updates: 1
2022-04-27 14:32:39.055 DEBUG 11708 --- [http-nio-8080-exec-10] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:32:39.055 DEBUG 11708 --- [http-nio-8080-exec-10] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:32:39.098 DEBUG 11708 --- [http-nio-8080-exec-10] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:32:39.107 DEBUG 11708 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time DESC LIMIT ?
2022-04-27 14:32:39.107 DEBUG 11708 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 5(Long)
2022-04-27 14:32:39.144 DEBUG 11708 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 5
2022-04-27 14:32:39.144  INFO 11708 --- [http-nio-8080-exec-10] c.e.f.s.serviceImpl.BlogServiceImpl      : [BlogEntity(blogUuid=1009, blogText=![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

, blogType=尚未分组, blogTitle=研压到此, blogTime=Wed Apr 27 14:31:20 CST 2022, blogCount=0), BlogEntity(blogUuid=1010, blogText=![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

, blogType=尚未分组, blogTitle=研压到此, blogTime=Wed Apr 27 14:31:20 CST 2022, blogCount=0), BlogEntity(blogUuid=1008, blogText=![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

, blogType=尚未分组, blogTitle=研压到此, blogTime=Wed Apr 27 14:31:19 CST 2022, blogCount=0), BlogEntity(blogUuid=1006, blogText=![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

, blogType=尚未分组, blogTitle=研压到此, blogTime=Wed Apr 27 14:31:18 CST 2022, blogCount=0), BlogEntity(blogUuid=1007, blogText=![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

, blogType=尚未分组, blogTitle=研压到此, blogTime=Wed Apr 27 14:31:18 CST 2022, blogCount=0)]
2022-04-27 14:33:20.613 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:33:20.613 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:33:20.615 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:33:20.616 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time DESC LIMIT ?,?
2022-04-27 14:33:20.616 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 5(Long), 5(Long)
2022-04-27 14:33:20.619 DEBUG 11708 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 4
2022-04-27 14:33:20.620  INFO 11708 --- [http-nio-8080-exec-8] c.e.f.s.serviceImpl.BlogServiceImpl      : [BlogEntity(blogUuid=1005, blogText=![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

, blogType=尚未分组, blogTitle=研压到此, blogTime=Wed Apr 27 14:31:17 CST 2022, blogCount=0), BlogEntity(blogUuid=1004, blogText=![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

, blogType=尚未分组, blogTitle=研压到此, blogTime=Wed Apr 27 14:31:16 CST 2022, blogCount=0), BlogEntity(blogUuid=1003, blogText=![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

, blogType=尚未分组, blogTitle=研压到此, blogTime=Wed Apr 27 14:31:15 CST 2022, blogCount=0), BlogEntity(blogUuid=1002, blogText=![2021-11-26](https://cdn.jsdelivr.net/gh/zyfx-wzk/Images/img/2021-11-26.png)

二叉搜索树满足如下性质：
左子树所有节点的元素值均小于根的元素值；
右子树所有节点的元素值均大于根的元素值。

据此可以得到如下算法：
若root 为空则返回空节点；
若val=root.val，则返回root；
若val<root.val，递归左子树；
若val>root.val，递归右子树。

```java
public class Solution {
    public static class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode() {
        }

        TreeNode(int val) {
            this.val = val;
        }

        TreeNode(int val, TreeNode left, TreeNode right) {
            this.val = val;
            this.left = left;
            this.right = right;
        }

    }

    public TreeNode searchBST(TreeNode root, int val) {
        if (root == null) {
            return null;
        }
        if (root.val == val) {
            return root;
        }
        return root.val < val ? searchBST(root.right, val) : searchBST(root.left, val);
    }

```

, blogType=尚未分组, blogTitle=2022-04-26, blogTime=Tue Apr 26 14:17:39 CST 2022, blogCount=12)]
2022-04-27 14:33:49.630  INFO 11708 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-04-27 14:33:49.640  INFO 11708 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-04-27 14:33:59.758  INFO 8044 --- [main] com.example.fxblog.FxBlogApplication     : Starting FxBlogApplication using Java 1.8.0_301 on Computer-WZK with PID 8044 (D:\Work\JAVA\FxBlog\target\classes started by WZK in D:\Work\JAVA\FxBlog)
2022-04-27 14:33:59.761  INFO 8044 --- [main] com.example.fxblog.FxBlogApplication     : No active profile set, falling back to default profiles: default
2022-04-27 14:34:00.984  INFO 8044 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2022-04-27 14:34:00.987  INFO 8044 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:34:01.036  INFO 8044 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2022-04-27 14:34:02.080  INFO 8044 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-04-27 14:34:02.107  INFO 8044 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-04-27 14:34:02.107  INFO 8044 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2022-04-27 14:34:02.223  INFO 8044 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-04-27 14:34:02.223  INFO 8044 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2366 ms
2022-04-27 14:34:04.907  INFO 8044 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-04-27 14:34:05.086  INFO 8044 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-04-27 14:34:05.095 DEBUG 8044 --- [main] c.e.fxblog.mapper.MetaMapper.selectList  : ==>  Preparing: SELECT meta_uuid,meta_key,meta_value FROM fx_meta WHERE (meta_key = ?)
2022-04-27 14:34:05.129 DEBUG 8044 --- [main] c.e.fxblog.mapper.MetaMapper.selectList  : ==> Parameters: image_url(String)
2022-04-27 14:34:05.159 DEBUG 8044 --- [main] c.e.fxblog.mapper.MetaMapper.selectList  : <==      Total: 6
2022-04-27 14:34:05.176  INFO 8044 --- [main] com.example.fxblog.utils.ImageUtil       : 图片列表加载完成,当前Redis缓存中共6张图片
2022-04-27 14:34:05.918  INFO 8044 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-04-27 14:34:05.929  INFO 8044 --- [main] com.example.fxblog.FxBlogApplication     : Started FxBlogApplication in 7.398 seconds (JVM running for 12.703)
2022-04-27 14:34:13.736  INFO 8044 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-04-27 14:34:13.736  INFO 8044 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-04-27 14:34:13.737  INFO 8044 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-04-27 14:35:11.476  WARN 8044 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m6s290ms561µs900ns).
2022-04-27 14:35:11.791 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:35:11.794 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:35:11.803 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:35:11.845 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time DESC LIMIT ?,?
2022-04-27 14:35:11.853 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 5(Long), 5(Long)
2022-04-27 14:35:11.899 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 4
2022-04-27 14:36:06.761  INFO 8044 --- [http-nio-8080-exec-2] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:36:06.778  INFO 8044 --- [http-nio-8080-exec-2] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2022-04-27 14:36:37.307  WARN 8044 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=47s38ms572µs900ns).
2022-04-27 14:36:37.882 DEBUG 8044 --- [http-nio-8080-exec-2] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:36:37.888 DEBUG 8044 --- [http-nio-8080-exec-2] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:36:37.899 DEBUG 8044 --- [http-nio-8080-exec-2] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:36:37.909 DEBUG 8044 --- [http-nio-8080-exec-2] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?,?
2022-04-27 14:36:37.922 DEBUG 8044 --- [http-nio-8080-exec-2] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 5(Long), 5(Long)
2022-04-27 14:36:37.959 DEBUG 8044 --- [http-nio-8080-exec-2] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 4
2022-04-27 14:48:06.812  INFO 8044 --- [http-nio-8080-exec-4] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:48:06.824  INFO 8044 --- [http-nio-8080-exec-4] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2022-04-27 14:48:06.931 DEBUG 8044 --- [http-nio-8080-exec-4] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:48:06.932 DEBUG 8044 --- [http-nio-8080-exec-4] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:48:06.933 DEBUG 8044 --- [http-nio-8080-exec-4] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:48:06.934 DEBUG 8044 --- [http-nio-8080-exec-4] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?,?
2022-04-27 14:48:06.935 DEBUG 8044 --- [http-nio-8080-exec-4] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 5(Long), 5(Long)
2022-04-27 14:48:06.937 DEBUG 8044 --- [http-nio-8080-exec-4] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 4
2022-04-27 14:48:20.272 DEBUG 8044 --- [http-nio-8080-exec-5] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:48:20.273 DEBUG 8044 --- [http-nio-8080-exec-5] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:48:20.275 DEBUG 8044 --- [http-nio-8080-exec-5] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:48:20.276 DEBUG 8044 --- [http-nio-8080-exec-5] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:48:20.277 DEBUG 8044 --- [http-nio-8080-exec-5] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 5(Long)
2022-04-27 14:48:20.280 DEBUG 8044 --- [http-nio-8080-exec-5] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 5
2022-04-27 14:48:39.851 DEBUG 8044 --- [http-nio-8080-exec-6] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:48:39.852 DEBUG 8044 --- [http-nio-8080-exec-6] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:48:39.853 DEBUG 8044 --- [http-nio-8080-exec-6] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:48:39.854 DEBUG 8044 --- [http-nio-8080-exec-6] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:48:39.854 DEBUG 8044 --- [http-nio-8080-exec-6] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 5(Long)
2022-04-27 14:48:39.859 DEBUG 8044 --- [http-nio-8080-exec-6] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 5
2022-04-27 14:48:44.836 DEBUG 8044 --- [http-nio-8080-exec-7] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:48:44.836 DEBUG 8044 --- [http-nio-8080-exec-7] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:48:44.837 DEBUG 8044 --- [http-nio-8080-exec-7] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:48:44.839 DEBUG 8044 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:48:44.839 DEBUG 8044 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 3(Long)
2022-04-27 14:48:44.841 DEBUG 8044 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 3
2022-04-27 14:48:53.164 DEBUG 8044 --- [http-nio-8080-exec-8] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:48:53.165 DEBUG 8044 --- [http-nio-8080-exec-8] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:48:53.166 DEBUG 8044 --- [http-nio-8080-exec-8] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:48:53.167 DEBUG 8044 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:48:53.167 DEBUG 8044 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 1(Long)
2022-04-27 14:48:53.206 DEBUG 8044 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 1
2022-04-27 14:52:02.842  INFO 8044 --- [http-nio-8080-exec-10] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:52:02.852  INFO 8044 --- [http-nio-8080-exec-10] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2022-04-27 14:52:02.914 DEBUG 8044 --- [http-nio-8080-exec-10] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:52:02.916 DEBUG 8044 --- [http-nio-8080-exec-10] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:52:02.917 DEBUG 8044 --- [http-nio-8080-exec-10] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:52:02.919 DEBUG 8044 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:52:02.919 DEBUG 8044 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 1(Long)
2022-04-27 14:52:02.922 DEBUG 8044 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 1
2022-04-27 14:52:24.146 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:52:24.146 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:52:24.147 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:52:24.149 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:52:24.149 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 3(Long)
2022-04-27 14:52:24.152 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 3
2022-04-27 14:52:53.496  INFO 8044 --- [http-nio-8080-exec-2] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:52:53.503  INFO 8044 --- [http-nio-8080-exec-2] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2022-04-27 14:52:53.544 DEBUG 8044 --- [http-nio-8080-exec-2] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:52:53.545 DEBUG 8044 --- [http-nio-8080-exec-2] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:52:53.547 DEBUG 8044 --- [http-nio-8080-exec-2] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:52:53.548 DEBUG 8044 --- [http-nio-8080-exec-2] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:52:53.548 DEBUG 8044 --- [http-nio-8080-exec-2] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 3(Long)
2022-04-27 14:52:53.551 DEBUG 8044 --- [http-nio-8080-exec-2] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 3
2022-04-27 14:52:55.342 DEBUG 8044 --- [http-nio-8080-exec-3] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:52:55.343 DEBUG 8044 --- [http-nio-8080-exec-3] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:52:55.345 DEBUG 8044 --- [http-nio-8080-exec-3] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:52:55.347 DEBUG 8044 --- [http-nio-8080-exec-3] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:52:55.347 DEBUG 8044 --- [http-nio-8080-exec-3] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 3(Long)
2022-04-27 14:52:55.349 DEBUG 8044 --- [http-nio-8080-exec-3] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 3
2022-04-27 14:55:11.730  INFO 8044 --- [http-nio-8080-exec-5] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:55:11.740  INFO 8044 --- [http-nio-8080-exec-5] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2022-04-27 14:55:11.790 DEBUG 8044 --- [http-nio-8080-exec-5] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:55:11.791 DEBUG 8044 --- [http-nio-8080-exec-5] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:55:11.792 DEBUG 8044 --- [http-nio-8080-exec-5] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:55:11.792 DEBUG 8044 --- [http-nio-8080-exec-5] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:55:11.793 DEBUG 8044 --- [http-nio-8080-exec-5] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 3(Long)
2022-04-27 14:55:11.796 DEBUG 8044 --- [http-nio-8080-exec-5] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 3
2022-04-27 14:55:14.127 DEBUG 8044 --- [http-nio-8080-exec-6] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:55:14.128 DEBUG 8044 --- [http-nio-8080-exec-6] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:55:14.130 DEBUG 8044 --- [http-nio-8080-exec-6] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:55:14.132 DEBUG 8044 --- [http-nio-8080-exec-6] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:55:14.133 DEBUG 8044 --- [http-nio-8080-exec-6] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 3(Long)
2022-04-27 14:55:14.136 DEBUG 8044 --- [http-nio-8080-exec-6] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 3
2022-04-27 14:55:18.494 DEBUG 8044 --- [http-nio-8080-exec-7] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:55:18.496 DEBUG 8044 --- [http-nio-8080-exec-7] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:55:18.496 DEBUG 8044 --- [http-nio-8080-exec-7] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:55:18.497 DEBUG 8044 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:55:18.498 DEBUG 8044 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 3(Long)
2022-04-27 14:55:18.499 DEBUG 8044 --- [http-nio-8080-exec-7] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 3
2022-04-27 14:55:30.891  INFO 8044 --- [http-nio-8080-exec-8] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:55:30.894  INFO 8044 --- [http-nio-8080-exec-8] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2022-04-27 14:55:30.959 DEBUG 8044 --- [http-nio-8080-exec-8] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:55:30.959 DEBUG 8044 --- [http-nio-8080-exec-8] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:55:30.960 DEBUG 8044 --- [http-nio-8080-exec-8] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:55:30.961 DEBUG 8044 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:55:30.961 DEBUG 8044 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 3(Long)
2022-04-27 14:55:30.963 DEBUG 8044 --- [http-nio-8080-exec-8] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 3
2022-04-27 14:55:52.858  INFO 8044 --- [http-nio-8080-exec-9] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:55:52.869  INFO 8044 --- [http-nio-8080-exec-9] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2022-04-27 14:55:52.970 DEBUG 8044 --- [http-nio-8080-exec-9] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:55:52.971 DEBUG 8044 --- [http-nio-8080-exec-9] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:55:52.975 DEBUG 8044 --- [http-nio-8080-exec-9] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:55:52.978 DEBUG 8044 --- [http-nio-8080-exec-9] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:55:52.979 DEBUG 8044 --- [http-nio-8080-exec-9] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 3(Long)
2022-04-27 14:55:52.983 DEBUG 8044 --- [http-nio-8080-exec-9] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 3
2022-04-27 14:56:06.301  INFO 8044 --- [http-nio-8080-exec-10] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:56:06.309  INFO 8044 --- [http-nio-8080-exec-10] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2022-04-27 14:56:06.356 DEBUG 8044 --- [http-nio-8080-exec-10] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:56:06.356 DEBUG 8044 --- [http-nio-8080-exec-10] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:56:06.357 DEBUG 8044 --- [http-nio-8080-exec-10] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:56:06.358 DEBUG 8044 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:56:06.358 DEBUG 8044 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 3(Long)
2022-04-27 14:56:06.359 DEBUG 8044 --- [http-nio-8080-exec-10] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 3
2022-04-27 14:56:20.234  INFO 8044 --- [http-nio-8080-exec-1] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:56:20.239  INFO 8044 --- [http-nio-8080-exec-1] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2022-04-27 14:56:20.283 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:56:20.283 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:56:20.284 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:56:20.285 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:56:20.286 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 3(Long)
2022-04-27 14:56:20.288 DEBUG 8044 --- [http-nio-8080-exec-1] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 3
2022-04-27 14:58:22.659  INFO 8044 --- [http-nio-8080-exec-3] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:58:22.666  INFO 8044 --- [http-nio-8080-exec-3] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2022-04-27 14:58:22.710 DEBUG 8044 --- [http-nio-8080-exec-3] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:58:22.711 DEBUG 8044 --- [http-nio-8080-exec-3] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:58:22.711 DEBUG 8044 --- [http-nio-8080-exec-3] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:58:22.713 DEBUG 8044 --- [http-nio-8080-exec-3] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:58:22.713 DEBUG 8044 --- [http-nio-8080-exec-3] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 3(Long)
2022-04-27 14:58:22.714 DEBUG 8044 --- [http-nio-8080-exec-3] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 3
2022-04-27 14:59:06.757  INFO 8044 --- [http-nio-8080-exec-4] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-04-27 14:59:06.766  INFO 8044 --- [http-nio-8080-exec-4] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2022-04-27 14:59:06.816 DEBUG 8044 --- [http-nio-8080-exec-4] c.e.f.m.BlogMapper.selectPage_mpCount    : ==>  Preparing: SELECT COUNT(*) AS total FROM fx_blog
2022-04-27 14:59:06.817 DEBUG 8044 --- [http-nio-8080-exec-4] c.e.f.m.BlogMapper.selectPage_mpCount    : ==> Parameters: 
2022-04-27 14:59:06.818 DEBUG 8044 --- [http-nio-8080-exec-4] c.e.f.m.BlogMapper.selectPage_mpCount    : <==      Total: 1
2022-04-27 14:59:06.819 DEBUG 8044 --- [http-nio-8080-exec-4] c.e.fxblog.mapper.BlogMapper.selectPage  : ==>  Preparing: SELECT blog_uuid,blog_text,blog_type,blog_title,blog_time,blog_count FROM fx_blog ORDER BY blog_time ASC LIMIT ?
2022-04-27 14:59:06.819 DEBUG 8044 --- [http-nio-8080-exec-4] c.e.fxblog.mapper.BlogMapper.selectPage  : ==> Parameters: 3(Long)
2022-04-27 14:59:06.821 DEBUG 8044 --- [http-nio-8080-exec-4] c.e.fxblog.mapper.BlogMapper.selectPage  : <==      Total: 3
2022-04-27 15:01:20.243  INFO 8044 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-04-27 15:01:20.254  INFO 8044 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
